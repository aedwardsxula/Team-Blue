
2. Arrange: Create a tiny dataset of 4 records with the required numeric attributes age, bmi, children, charges
   Act: Call your function that calculates count, mean, std, min, 25th, 50th, 75th, max for each attribute (age, bmi, children, charges.)
   Verify the outputs exactly as numbers rounded here to 4 decimals. If every asserted value matches (within tolerance), the test passes.

4. Arrange: Prepare a small set of BMI values to test. BMIs = [18.5, 22.0, 27.3, 31.0]
   Act: Run the function that generates the vertical histogram of the BMI values. Capture the output (either as a String or directly from the console).
   Assert: Compare the actual histogram output to the expected histogram and verify if each BMI value is counted in the correct bin, the histogram is vertical, the right number of symbols, and the labels at the bottom of the histogram match the bins.

6. Arrange: Create a small dataset of records with a smoker field (values "yes" or "no").
   Act: Run the function that generates the vertical histogram of smokers vs. non-smokers. Capture the output string
   Assert: Verify that the “Smokers” column has exactly 2 markers,verify that the “Non-Smokers” column has exactly 2 markers,verify that the histogram is vertical, and verify that the labels "Smokers" and "Non-Smokers" appear under their respective columns.

Problem 1 Test:
//Arrange

var sex = ''
var direction = ''
var poilicy_holder = ''
int age = 0
int premuim_cost =  0
int bmi = 0 

//Act 

System.out.println(direction)

//Assert

if (direction == True) {
    System.out.println("Test was successful")
}

Problem 3 Test: horizontal text-based histogram of the age 
Arrange: The ages for this code should be variables inputted by
the user or coder and taken from the csv. A dictionary should be 
used to count how many customers are a certain age. The range inputs for
the histogram intervals, and the first interval number should be inputted (no magic numbers). 
Act: Generate histogram string.
The range segments should be
Assert: The output for the data of this csv, if 15 (starting number), and 5
(interval length) are inputted

15 - 20: **
20 - 25:
25 - 30: *
30 - 35: **
35 - 40: 
40 - 45:
45 - 50: *

Problem 5 Test: Total number of records for each number of children
Test 1: If number of children is zero
Arrange: Identify the ages of the clients in the data set. Have the 
cut off age for a child be input as a variable. Have a sum/total variable 
to record number of records of clients that fit the criteria.
Act: Generate the total number of records for each children 
Assert: The output should be: 
The total number of records for children is: 0 

Test 2: If a client's age is 0
Arrange: Identify the ages of the clients in the data set. Have the 
cut off age for a child be input as a variable. Have a sum/total variable. Do
not a client who is aged 0 in the total 
Act: Generate the total number of records for each child
Assert: The output should be (with the client input of 15, and the client ages
in the interval are 0, 12, 13):
The total number of records for children is: 2

Problem 7 Test: Fairness of data 
Test1: If data differs at more than 5%
Arrange: Identify the different regions, and create a variable for the sum of each
region's total amount of records. Ensure when subtracting these record amounts to find
the difference that the absolute value is used. 
Act: Generate a true or false boolean that answers if the data is fair
Assert: The output should look similar to this(similar in terms of text not boolen output):
The data is fair: False

Test2: If data differs at exactly 5%
Arrange: Identify the different regions, and create a variable for the sum of each
region's total amount of records. Ensure when subtracting these record amounts to find
the difference that the absolute value is used. 
Act: Generate a true or false boolean that answers if the data is fair
Assert: The output should look similar to this(similar in terms of text not boolen output):
The data is fair: True

Problem 9 Test: Range of BMIs
Test1: If range for charge is the same as the other two ranges
Arrange: Identify the highest and lowest charges for the bmi in 30-45 and 
establish the other two ranges (by user input or with intervals of 15 with 
given data) and find those values for each interval as well. Utilize these 
values as variables to compare (use absolute value whenn finding range values)
Act: Generate a true or false boolean that answers if the range is greater
Assert: The output should look similar to this(similar in terms of text not boolen output):
The range of charges for bmi in 30-45 are greater than the other two ranges: False

Test2: If range for charge is the greater as the other two ranges
Arrange: Identify the highest and lowest charges for the bmi in 30-45 and 
establish the other two ranges (by user input or with intervals of 15 with 
given data) and find those values for each interval as well. Utilize these 
values as variables to compare (use absolute value whenn finding range values)
Act: Generate a true or false boolean that answers if the range is greater
Assert: The output should look similar to this(similar in terms of text not boolen output):
The range of charges for bmi in 30-45 are greater than the other two ranges: True

Test3: If range for charge is less than the other two ranges
Arrange: Identify the highest and lowest charges for the bmi in 30-45 and 
establish the other two ranges (by user input or with intervals of 15 with 
given data) and find those values for each interval as well. Utilize these 
values as variables to compare (use absolute value whenn finding range values)
Act: Generate a true or false boolean that answers if the range is greater
Assert: The output should look similar to this(similar in terms of text not boolen output):
The range of charges for bmi in 30-45 are greater than the other two ranges: False

Problem 11: Charges of Smokers vs NonSmokers
Test1: If there are no smokers in the dataset
Arrange: Use the yes/no portion in the given csv to determine if a client is a smoker
or not and from those two catergories find the highest charge and the range. The highest charges
and the range will be used as variables to compare 
Act: Generate a true or false boolean that answers if the charges and range is higher for smokers
Assert: The output should look similar to this(similar in terms of text not boolen output):
Smokers have higher charges and wider range of charges than non-smokers: False

Test2: If the smokers in the dataset have a higher charges but not wider range
Arrange: Use the yes/no portion in the given csv to determine if a client is a smoker
or not and from those two catergories find the highest charge and the range. The highest charges
and the range will be used as variables to compare 
Act: Generate a true or false boolean that answers if the charges and range is higher for smokers
Assert: The output should look similar to this(similar in terms of text not boolen output):
Smokers have higher charges and wider range of charges than non-smokers: False


Test3: If the smokers in the dataset have same charges and range of charges as nonsmokers
Arrange:Use the yes/no portion in the given csv to determine if a client is a smoker
or not and from those two catergories find the highest charge and the range. The highest charges
and the range will be used as variables to compare 
Act: Generate a true or false boolean that answers if the charges and range is higher for smokers
Assert: The output should look similar to this(similar in terms of text not boolen output):
Smokers have higher charges and wider range of charges than non-smokers: False

Test4: If the smokers in the dataset have a higher charges and a wider range
Arrange: Use the yes/no portion in the given csv to determine if a client is a smoker
or not and from those two catergories find the highest charge and the range. The highest charges
and the range will be used as variables to compare 
Act: Generate a true or false boolean that answers if the charges and range is higher for smokers
Assert: The output should look similar to this(similar in terms of text not boolen output):
Smokers have higher charges and wider range of charges than non-smokers: True


Problem 13: Avg BMI, smokers vs non smokers
Test1: If BMI avg of smokers is the same as non-smokers
Arrange: Use the csv to retrieve the bmi of all smokers and 
non smokers. Then avg these bmis for each catergory, the resulting 
avgs should be variables that can be compared
Act: Generate a true or false boolean that answers if the avg bmis 
for smokers is lower than non smokers 
Assert: The output should look similar to this(similar in terms of text not boolen output):
Smokers have a lower average bmi than non-smokers: False

Test2: If BMI avg of smokers is the higher than non-smokers
Arrange: Use the csv to retrieve the bmi of all smokers and 
non smokers. Then avg these bmis for each catergory, the resulting 
avgs should be variables that can be compared
Act: Generate a true or false boolean that answers if the avg bmis 
for smokers is lower than non smokers 
Assert: The output should look similar to this(similar in terms of text not boolen output):
Smokers have a lower average bmi than non-smokers: False

Test3: If BMI avg of smokers is the lower than non-smokers
Arrange: Arrange: Use the csv to retrieve the bmi of all smokers and 
non smokers. Then avg these bmis for each catergory, the resulting 
avgs should be variables that can be compared
Act: Generate a true or false boolean that answers if the avg bmis 
Assert: The output should look similar to this(similar in terms of text not boolen output):
Smokers have a lower average bmi than non-smokers: True

Problem 15: Sorting charges in descenging order (averages)
Test1: If two regions(or more) have the same average
Arrange: Establish the four regions and find the average charges
for each region. This should result in four comparable variables
that can be put in descending order. 
Act: Generate a list of descending order regions based on their avg charge
Assert: The ouput should look like this if the avg per region was 
southeast: 1 , southwest: 2.5, northeast: 2.5, northwest: 3
northwest
northeast, southwest
southeast

Test2: If averages for each region is different
Arrange: Establish the four regions and find the average charges
for each region. This should result in four comparable variables
that can be put in descending order. 
Act: Generate a list of descending order regions based on their avg charge
Assert: The ouput should look like this if the avg per region was 
southeast: 1 , southwest: 2.5, northeast: 3, northwest: 4
northwest
northeast
southwest
southeast

Problem 17: Avg smoking per region and age group
Test1: If there are no southern smokers
Arrange: Determine how many southerners and northerns are smoke. Average the ages
of smokers in each catergory. Compare these ages and number of smokers per area to
solve the problem  
Act: Generate an average age of smokers, in the event that southerners smoke more than
northerners
Assert: If there are no southern smokers the output should look like this: 
There is no average age where southereners smoke more than northerners 

Test2: If southerners smoke less than northerners
Arrange: Determine how many southerners and northerns are smoke. Average the ages
of smokers in each catergory. Compare these ages and number of smokers per area to
solve the problem  
Act: Generate an average age of smokers, in the event that southerners smoke more than
northerners
Assert: If southern smokers smoke less than northerners then the  output should look like this: 
There is no average age where southereners smoke more than northerners 

Test3: If southerners smoke more than northerners
Arrange: Determine how many southerners and northerns are smoke. Average the ages
of smokers in each catergory. Compare these ages and number of smokers per area to
solve the problem  
Act: Generate an average age of smokers, in the event that southerners smoke more than
northerners
Assert: If the amount of southern smokers were 5 and northern 3, and the average ages being 
25 and 30 respectively, the output should look like this
The average age where southereners smoke more than northerners is: 25

Problem 19: Number of Children, Southerners vs northerners
Test1: If southerners have less children than northerners
Arrange: Determine how many children southerners and northerners. Then
determine the average age of northerners and southerners.  
Act: Generate the avg amount of children of southerners and northerners and the avg age
of southerners, in the event that there are more southerners with children print that age
Assert: The output should look like this:
Southerners don't have on average more children than northerners. 

Test2: If southerners have the same amount of children as northerners
Arrange: Determine how many children southerners and northerners. Then
determine the average age of northerners and southerners.  
Act: Generate the avg amount of children of southerners and northerners and the avg age
of southerners, in the event that there are more southerners with children print that age
Assert: The output should look like this:
Southerners don't have on average more children than northerners. 

Test3: If southerners have more childrean than northerners
Arrange: Determine how many children southerners and northerners. Then
determine the average age of northerners and southerners.  
Act: Generate the avg amount of children of southerners and northerners and the avg age
of southerners, in the event that there are more southerners with children print that age
Assert: The output should look like this (If average southerner age was 22):
Southerners average more children than northerners at, on average, age: 22

Problem 21: Linear regression of charges vs number of children
Test1: Linear regression is positive
Arrange: Determine the number of children and the charges of clients and make this into
comparable variables to perform the pearson correlation coefficient operation 
Act: Calculate the simple linear regression of the charges versus the number of children. 
Output the Pearson Correlation Coefficient (r). Apply your regression formula to 22 charges
that are not in the Kaggle dataset and output both the x and y values.
Assert: The output should look like this if the x.y pairs were (4, 8)
(5, 5),(6, 3),(2, 3),(7, 8),(2, 1),(3, 8),(9, 2),(8, 0),(0, 6),(1, 8),(9, 2)
(3, 2),(6, 6),(1, 9),(4, 5),(1, 5),(9, 8),(2, 7),(2, 5),(5, 1), (9, 7) and r is 1:
The Pearson Correlation Coefficient(r) is 1
The x,y pairs are: 
(4, 8)
(5, 5)
(6, 3)
(2, 3)
(7, 8)
(2, 1)
(3, 8)
(9, 2)
(8, 0)
(0, 6)
(1, 8)
(9, 2)
(3, 2)
(6, 6)
(1, 9)
(4, 5)
(1, 5)
(9, 8)
(2, 7)
(2, 5)
(5, 1)
(9, 7)

Test2: There are no children
Arrange: Determine the number of children and the charges of clients and make this into
comparable variables to perform the pearson correlation coefficient operation 
Act: Calculate the simple linear regression of the charges versus the number of children. 
Output the Pearson Correlation Coefficient (r). Apply your regression formula to 22 charges
that are not in the Kaggle dataset and output both the x and y values.
Assert: The output should look like this if the x.y pairs were (4, 8)
(5, 5),(6, 3),(2, 3),(7, 8),(2, 1),(3, 8),(9, 2),(8, 0),(0, 6),(1, 8),(9, 2)
(3, 2),(6, 6),(1, 9),(4, 5),(1, 5),(9, 8),(2, 7),(2, 5),(5, 1), (9, 7):
There is no Pearson Correlation Coefficient(r)
The x,y pairs are: 
(4, 8)
(5, 5)
(6, 3)
(2, 3)
(7, 8)
(2, 1)
(3, 8)
(9, 2)
(8, 0)
(0, 6)
(1, 8)
(9, 2)
(3, 2)
(6, 6)
(1, 9)
(4, 5)
(1, 5)
(9, 8)
(2, 7)
(2, 5)
(5, 1)
(9, 7)

Test3: Linear Regression has no correlation: 
Arrange:Determine the number of children and the charges of clients and make this into
comparable variables to perform the pearson correlation coefficient operation 
Act: Calculate the simple linear regression of the charges versus the number of children. 
Output the Pearson Correlation Coefficient (r). Apply your regression formula to 22 charges
that are not in the Kaggle dataset and output both the x and y values.
Assert: The output should look like this if the x.y pairs were (4, 8)
(5, 5),(6, 3),(2, 3),(7, 8),(2, 1),(3, 8),(9, 2),(8, 0),(0, 6),(1, 8),(9, 2)
(3, 2),(6, 6),(1, 9),(4, 5),(1, 5),(9, 8),(2, 7),(2, 5),(5, 1), (9, 7) and r is 0.1:
The Pearson Correlation Coefficient(r) is 0.1
The x,y pairs are: 
(4, 8)
(5, 5)
(6, 3)
(2, 3)
(7, 8)
(2, 1)
(3, 8)
(9, 2)
(8, 0)
(0, 6)
(1, 8)
(9, 2)
(3, 2)
(6, 6)
(1, 9)
(4, 5)
(1, 5)
(9, 8)
(2, 7)
(2, 5)
(5, 1)
(9, 7)

Test4: Linear Regression had Negative Correlation
Arrange: Determine the number of children and the charges of clients and make this into
comparable variables to perform the pearson correlation coefficient operation 
Act: Calculate the simple linear regression of the charges versus the number of children. 
Output the Pearson Correlation Coefficient (r). Apply your regression formula to 22 charges
that are not in the Kaggle dataset and output both the x and y values.
Assert: The output should look like this if the x.y pairs were (4, 8)
(5, 5),(6, 3),(2, 3),(7, 8),(2, 1),(3, 8),(9, 2),(8, 0),(0, 6),(1, 8),(9, 2)
(3, 2),(6, 6),(1, 9),(4, 5),(1, 5),(9, 8),(2, 7),(2, 5),(5, 1), (9, 7) and r is -1:
The Pearson Correlation Coefficient(r) is -1
The x,y pairs are: 
(4, 8)
(5, 5)
(6, 3)
(2, 3)
(7, 8)
(2, 1)
(3, 8)
(9, 2)
(8, 0)
(0, 6)
(1, 8)
(9, 2)
(3, 2)
(6, 6)
(1, 9)
(4, 5)
(1, 5)
(9, 8)
(2, 7)
(2, 5)
(5, 1)
(9, 7)





















































































//Test for 3
// Arrange: Ages = [18, 18, 40, 44], Start=15, Interval=5
// Act: Run horizontal age histogram
// Assert: Output should show
// 15-20: ** (2)
// 20-25:  (0)
// 25-30:  (0)
// 30-35:  (0)
// 35-40:  (0)
// 40-45: ** (2)
// 45-50:  (0)

//Test for #12
// Arrange: Create dataset where southern smokers avg charge = 11000, other smokers avg charge = 10000.
// Act: Compute average charges for southern and non-southern smokers.
// Assert: Verify (south_avg / other_avg) < 1.25 → hypothesis is false.


//Test for #13
// Arrange: Create dataset with smoker BMIs [22, 25, 27] and no non-smoker records.
// Act: Calculate average BMI for smokers and attempt to calculate for non-smokers.
// Assert: Verify smoker avg BMI is computed; non-smoker avg BMI is undefined or returns 0; 
// confirm code handles empty set safely.

//Test for #14
//Arrange: Create an empty dataset with no smoker records.
// Act: Generate the smoker age histogram.
// Assert: Verify output shows no bins or frequencies (empty distribution message displayed).

//Test for #15
// Arrange: Create dataset with 4 regions (north, south, east, west) 
// and different average charges per region.
// Act: Calculate average charge per region and sort them in descending order.
// Assert: Verify that regions are sorted from highest to lowest average charges.

//Test for #16
// Arrange: Create dataset with smoker ages [19, 22, 25] and non-smoker ages [40, 45, 60].
// Act: Calculate average age for smokers and non-smokers.
// Assert: Verify smoker average age < non-smoker average age.

//Test for #17
// Arrange: Create dataset where more Southerners are smokers than Northerners, 
// including their ages.
// Act: Calculate smoking rate by region and find average age of Southern smokers.
// Assert: Verify South smoker rate > North smoker rate and report the average age of Southern smokers.

//Test for #18
// Arrange: Create dataset where Southern BMI values average around 32 
// and Northern BMI values average around 26.
// Act: Calculate average BMI for each region.
// Assert: Verify South avg BMI > North avg BMI and report the average BMI of Southerners.

//Test for #19
// Arrange: Create dataset where Southerners have more children (avg 3) 
// than Northerners (avg 1), with recorded ages for each group.
// Act: Calculate average number of children by region and find average age 
// of Southern clients where this holds true.
// Assert: Verify South avg children > North avg children, and output the average age of Southerners.

// Test for #20
// Arrange: BMI = [20,25,30,35,40], Charges = [2000,4000,6000,8000,10000].
// Act: Compute regression (charges vs BMI) and Pearson r; predict 11 new BMI values.
// Assert: r > 0.9 and predicted charges rise with increasing BMI.



8. Arrange: Prepare a small sample dataset of records. Each record should include age and charges
   Act: Make sure the code Separates people into two groups, Calculates the average, Checks whether the older group’s average is at least twice the younger group’s average.
   Assert: Verify that The averages were computed correctly, The comparison logic, The function returns the expected boolean value

10. Arrange: Create a small test dataset with each person’s number of children and their total insurance charges.
    Act: Run the code that Groups records by the number of children, Calculates the average charge per child for each group, Checks if the average charge per child decreases as the number of children increases (True or False)
    Assert: The per-child charge values were calculated correctly,The relationship between number of children and per-child charge is correctly analyzed,The function returns the expected result (true for this dataset)

12 Arrange: Prepare a small dataset of smokers only, each with region and charges.
   Acts: Make sure the function Filters to smokers, Splits them into South, Computes the average, and Checks whether.
   Assert: Verify the computed averages match the manual values (within a small tolerance), Verify the comparison logic is correct, and Verify the final boolean result is TRUE for this dataset. 

14 Arrange: Prepare a small dataset of people, each record containing at least age and smoker.
   Act: Make sure the code Filters the dataset to include only smokers, Groups the remaining records by age range, Counts how many smokers fall into each age bin, and Produces a text-based histogram (horizontal or vertical)
   Assert: Verify that Only smokers were counted, Each age range correctly reflects the number of smokers, The histogram text (using # or *) matches the expected bin counts

16. Arrange: Create a small dataset with each person’s age and smoker status.
    Act: Make sure the code Separates smokers and non-smokers into two groups, Computes the average age for each group, Compares the two averages to determine whether smokers are generally younger, Returns the average smoker age and a boolean (true if smokers are younger)
    Asseert: Verify that The average age of smokers is correctly calculated, The average age of non-smokers is correctly calculated, The function correctly determines that smokers are, on average, younger, and The reported “average age where this is true” equals approximately 24.7 years for this dataset.
    
18. Arrange: Prepare a dataset that includes region and BMI for each person and Define the regions.
    Act: Make sure the code Divides records into “southern” and “northern” groups based on region, Calculates the average BMI for each group, Compares the averages to check whether Southerners have a higher average BMI, and Returns both averages and whether the hypothesis is true
    Assert: Verify that BMI averages for both regions are computed correctly, The southern average is higher than the northern average, The result (true/false) matches the expected outcome, and The reported “average BMI where this is true” is approximately 32.1 for Southerners in this dataset.

20. Arrange: Prepare a sample dataset of BMI and corresponding charges values (simplified for testing).
    Act: Make sure the code Calculates the linear regression between charges (y) and BMI (x), Computes and outputs the Pearson correlation coefficient (r), Generates the regression equation (y = a + b·x), and Applies the regression model to 11 new BMI values, producing 11 predicted charge values
    Assert: Verify that The computed r value matches the expected high positive correlation (close to 1.0), The regression coefficients a (intercept) and b (slope) are numerically reasonable (positive slope), Each new x value produces a predicted y value according to the formula y = a + b·x, and There are exactly 11 pairs of output values (x, predicted y)

22. Arrange: Prepare a dataset that includes each person’s region (categorical) and charges (numeric).
    Act:  Make sure the code Encodes region strings into numbers, Computes linear regression of charges versus encoded region,Outputs the regression formula, Calculates and prints the Pearson correlation coefficient (r),Applies the regression equation to 33 new x values (region codes 1–4, reused multiple times or as synthetic examples) to generate predicted charges (y).
    Assert: Verify that The encoding and regression setup are correct (region converted properly to numeric), The computed r matches expected direction (positive correlation), The regression formula behaves logically, Exactly 33 predicted (x, y) pairs are produced, and Predicted y values follow the trend defined by the slope b.

